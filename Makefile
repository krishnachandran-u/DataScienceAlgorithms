CXX = g++
CXXFLAGS = -std=c++11 -Wall

# Directories
SRC_DIR = .
BUILD_DIR = build
BIN_DIR = bin

# File extensions
SRC_EXT = cpp
OBJ_EXT = o

# Find all C++ files in the root and subdirectories
SOURCES := $(shell find $(SRC_DIR) -type f -name *.$(SRC_EXT))

# Create a list of corresponding object files
OBJECTS := $(patsubst $(SRC_DIR)/%,$(BUILD_DIR)/%,$(SOURCES:.$(SRC_EXT)=.$(OBJ_EXT)))

# Set the name of the final executable
TARGET = $(BIN_DIR)/your_executable_name

# Default target
all: $(TARGET)

# Rule to build the executable
$(TARGET): $(OBJECTS)
	@mkdir -p $(BIN_DIR)
	$(CXX) $^ -o $(TARGET)

# Rule to compile source files
$(BUILD_DIR)/%.$(OBJ_EXT): $(SRC_DIR)/%.$(SRC_EXT)
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Phony target to run the executable
run:
	$(TARGET)

# Phony target to clean the build directory
clean:
	@rm -rf $(BUILD_DIR) $(BIN_DIR)

# Include dependencies (generated by the compiler)
-include $(OBJECTS:.o=.d)

